name: CI

on: [push]

jobs:
  backend:
    runs-on: "ubuntu-latest"

    container:
      image:  python:3.8

    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
        - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v1

    - uses: actions/setup-python@v1
      with:
        python-version: '3.8'
        architecture: 'x64'

    - name: Install deps
      run: |
        pip3 install pipenv

    - name: Run tests
      run: |
        pipenv install --dev
        pipenv run coverage run --source='.' manage.py test
        pipenv run coverage xml
        pipenv run python-codacy-coverage -r coverage.xml
      env:
        PIPENV_VENV_IN_PROJECT: true
        SECRET_KEY: Test
        DJANGO_SETTINGS_MODULE: project.settings_test
        DATABASE_URL: postgresql://postgres:postgres@postgres:${{ job.services.postgres.ports[5432] }}/postgres?sslmode=disable
        CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_BACKEND_PROJECT_TOKEN }}

  deploy_staging:
    runs-on: ubuntu-latest

    if: success() && github.ref == 'refs/heads/master'

    steps:
    - uses: actions/checkout@v1
    - name: Push to Heroku
      run: git push -f https://heroku:${{ secrets.HEROKU_API_TOKEN }}@git.heroku.com/${{ secrets.HEROKU_APP_STAGING }}.git origin/master:master
    - name: Slack Notification
      uses: rtCamp/action-slack-notify@master
      env:
        SLACK_CHANNEL: dev-watchdog
        SLACK_COLOR: '#3278BD'
        SLACK_ICON: https://github.com/tnpbot.png?size=48
        SLACK_MESSAGE: 'Deploy Staging Success! :parrot:'
        SLACK_TITLE: Backend template
        SLACK_USERNAME: TNPBot
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

  deploy_production:
    runs-on: ubuntu-latest

    if: success() && contains(github.ref, 'tags')

    steps:
    - uses: actions/checkout@v1
    - name: Push to Heroku
      run: git push -f https://heroku:${{ secrets.HEROKU_API_TOKEN }}@git.heroku.com/${{ secrets.HEROKU_APP_PRODUCTION }}.git origin/master:master
    - name: Slack Notification
      uses: rtCamp/action-slack-notify@master
      env:
        SLACK_CHANNEL: dev-watchdog
        SLACK_COLOR: '#3278BD'
        SLACK_ICON: https://github.com/tnpbot.png?size=48
        SLACK_MESSAGE: 'Deploy Production Success! :parrot:'
        SLACK_TITLE: Backend template
        SLACK_USERNAME: TNPBot
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
